project.name=abm-${STAGE_ID:unknown}-appmanager-oxs
spring.application.name=abm-${STAGE_ID:unknown}-appmanager-oxs
server.port=7001
spring.main.allow-circular-references=true
# Alimonitor
spring.alimonitor.filter.url-patterns=/query,/command,/file,/plugin
# TDDL
spring.datasource.url=jdbc:mysql://${APPMANAGER_DB_HOST}:${APPMANAGER_DB_PORT}/${APPMANAGER_DB_NAME}?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.hikari.jdbc-url=jdbc:mysql://${APPMANAGER_DB_HOST}:${APPMANAGER_DB_PORT}/${APPMANAGER_DB_NAME}?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.hikari.username=${APPMANAGER_DB_USER}
spring.datasource.hikari.password=${APPMANAGER_DB_PASSWORD}
spring.datasource.hikari.driver-class-name=com.mysql.jdbc.Driver
# MyBatis
mybatis.config-location=classpath:/mybatis/mybatis-config.xml
# Management
management.server.port=7002
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
# Storage - Bucket
appmanager.package.driver=${APPMANAGER_PACKAGE_DRIVER}
appmanager.package.endpointProtocol = ${APPMANAGER_PACKAGE_ENDPOINT_PROTOCOL}
appmanager.package.endpoint=${APPMANAGER_PACKAGE_ENDPOINT}
appmanager.package.access-key=${APPMANAGER_PACKAGE_ACCESS_KEY}
appmanager.package.secret-key=${APPMANAGER_PACKAGE_SECRET_KEY}
appmanager.package.bucket-name=${APPMANAGER_PACKAGE_BUCKET_NAME}
# Auth
appmanager.auth.enable-auth=${APPMANAGER_ENABLE_AUTH}
appmanager.auth.super-access-id=${APPMANAGER_ACCESS_ID}
appmanager.auth.super-access-secret=${APPMANAGER_ACCESS_SECRET}
appmanager.auth.super-client-id=${APPMANAGER_CLIENT_ID}
appmanager.auth.super-client-secret=${APPMANAGER_CLIENT_SECRET}
appmanager.auth.jwt-secret-key=${APPMANAGER_JWT_SECRET_KEY}
# Security
spring.security.xss.enabled=false
spring.security.json.enabled=false
spring.security.csrf.enabled=false
### Message Queue
spring.cloud.stream.kafka.binder.brokers=${APPMANAGER_KAFKA_BROKERS}
spring.cloud.stream.kafka.binder.defaultBrokerPort=${APPMANAGER_KAFKA_DEFAULT_BROKER_PORT}
spring.cloud.stream.bindings.doComponentPackageInput.destination=${ABM_CLUSTER}_tesla_appmanager_component_package_topic
spring.cloud.stream.bindings.doComponentPackageInput.contentType=application/json
spring.cloud.stream.bindings.doComponentPackageInput.group=CID_${ABM_CLUSTER}_TESLA_APPMANAGER_COMPONENT_PACKAGE_GROUP
spring.cloud.stream.bindings.doComponentPackageInput.consumer.concurrency=30
spring.cloud.stream.bindings.doComponentPackageOutput.destination=${ABM_CLUSTER}_tesla_appmanager_component_package_topic
spring.cloud.stream.bindings.doComponentPackageOutput.group=PID_${ABM_CLUSTER}_TESLA_APPMANAGER_COMPONENT_PACKAGE_GROUP
spring.cloud.stream.bindings.doComponentPackageOutput.contentType=application/json
# Jackson 配置
spring.jackson.serialization.write-dates-as-timestamps=true
# 数据库配置
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.use-new-id-generator-mappings=false
logging.level.org.hibernate.SQL=INFO
logging.level.org.springframework.web=DEBUG
# ThreadPool 配置
dag.local.thread-pool-size=${APPMANAGER_DAG_LOCAL_POOL_SIZE:1000}
dag.scheduling.maxPoolSize=${APPMANAGER_DAG_SCHEDULING_MAX_POOL_SIZE:50}
dag.monitor.maxPoolSize=${APPMANAGER_DAG_MONITOR_MAX_POOL_SIZE:100}
appmanager.thread-pool.component-watch-cron-manager-core-size=${APPMANAGER_THREAD_POOL_COMPONENT_WATCH_CRON_MANAGER_CORE_SIZE:100}
appmanager.thread-pool.component-watch-cron-manager-max-size=${APPMANAGER_THREAD_POOL_COMPONENT_WATCH_CRON_MANAGER_MAX_SIZE:150}
appmanager.thread-pool.component-watch-cron-manager-queue-capacity=${APPMANAGER_THREAD_POOL_COMPONENT_WATCH_CRON_MANAGER_QUEUE_CAPACITY:100000}
appmanager.thread-pool.component-watch-cron-failed-task-manager-core-size=${APPMANAGER_THREAD_POOL_COMPONENT_WATCH_CRON_FAILED_TASK_MANAGER_CORE_SIZE:20}
appmanager.thread-pool.component-watch-cron-failed-task-manager-max-size=${APPMANAGER_THREAD_POOL_COMPONENT_WATCH_CRON_FAILED_TASK_MANAGER_MAX_SIZE:30}
appmanager.thread-pool.component-watch-cron-failed-task-manager-queue-capacity=${APPMANAGER_THREAD_POOL_COMPONENT_WATCH_CRON_FAILED_TASK_MANAGER_QUEUE_CAPACITY:200000}
appmanager.thread-pool.rt-app-instance-status-update-core-size=${APPMANAGER_THREAD_POOL_RT_APP_INSTANCE_STATUS_UPDATE_CORE_SIZE:20}
appmanager.thread-pool.rt-app-instance-status-update-max-size=${APPMANAGER_THREAD_POOL_RT_APP_INSTANCE_STATUS_UPDATE_MAX_SIZE:40}
appmanager.thread-pool.rt-app-instance-status-update-queue-capacity=${APPMANAGER_THREAD_POOL_RT_APP_INSTANCE_STATUS_UPDATE_QUEUE_CAPACITY:150000}
appmanager.thread-pool.workflow-task-core-size=${APPMANAGER_THREAD_POOL_WORKFLOW_TASK_CORE_SIZE:20}
appmanager.thread-pool.workflow-task-max-size=${APPMANAGER_THREAD_POOL_WORKFLOW_TASK_MAX_SIZE:40}
appmanager.thread-pool.workflow-task-queue-capacity=${APPMANAGER_THREAD_POOL_WORKFLOW_TASK_QUEUE_CAPACITY:10000}
appmanager.thread-pool.async-executor-core-size=${APPMANAGER_THREAD_POOL_ASYNC_EXECUTOR_CORE_SIZE:200}
appmanager.thread-pool.async-executor-max-size=${APPMANAGER_THREAD_POOL_ASYNC_EXECUTOR_MAX_SIZE:400}
appmanager.thread-pool.async-executor-queue-capacity=${APPMANAGER_THREAD_POOL_ASYNC_EXECUTOR_QUEUE_CAPACITY:10000}
appmanager.thread-pool.task-scheduler-size=${APPMANAGER_THREAD_POOL_TASK_SCHEDULER_SIZE:100}
# DAG
schedule.log.show=false
reflections.log.show=false
tesla.dag.localnode.reflection.prefix=com.alibaba.tesla
tesla.dag.localnode.jar.path=/tmp/appmanager/
tesla.dag.localnode.runMaxSize=1000
tesla.check.worker.each.schedule.size=20
dag.hot.load.jar.interval.second=2
dag.usage.mode=jar
# OSS
dag.hot.load.jar.${APPMANAGER_PACKAGE_DRIVER}.endpoint=http://${APPMANAGER_PACKAGE_ENDPOINT}
dag.hot.load.jar.${APPMANAGER_PACKAGE_DRIVER}.accessKeyId=${APPMANAGER_PACKAGE_ACCESS_KEY}
dag.hot.load.jar.${APPMANAGER_PACKAGE_DRIVER}.accessKeySecret=${APPMANAGER_PACKAGE_SECRET_KEY}
dag.hot.load.jar.${APPMANAGER_PACKAGE_DRIVER}.bucket.name=${APPMANAGER_DAG_BUCKET_NAME}
# redis
spring.redis.host=${APPMANAGER_REDIS_HOST}
spring.redis.port=${APPMANAGER_REDIS_PORT}
spring.redis.database=${APPMANAGER_REDIS_DATABASE}
spring.redis.password=${APPMANAGER_REDIS_PASSWORD}
appmanager.redis.address=redis://:${APPMANAGER_REDIS_PASSWORD}@${APPMANAGER_REDIS_HOST}:${APPMANAGER_REDIS_PORT}/${APPMANAGER_REDIS_DATABASE}
# Cron
appmanager.cron-job.product-release-scheduler=${CRON_JOB_PRODUCT_RELEASE_SCHEDULER:0/10 * * * * *}
appmanager.cron-job.groovy-handler-factory-refresh=${CRON_JOB_GROOVY_HANDLER_FACTORY_REFRESH:0 * * * * *}
appmanager.cron-job.app-refresh=${CRON_JOB_APP_REFRESH:0/5 * * * * *}
appmanager.cron-job.build-status-safety=${CRON_JOB_BUILD_STATUS_SAFETY:-}
appmanager.cron-job.clean-app-package=${CRON_JOB_CLEAN_APP_PACKAGE:-}
appmanager.cron-job.clean-dag-inst=${CRON_JOB_CLEAN_DAG_INST:0 */5 * * * *}
appmanager.cron-job.clean-docker-image=${CRON_JOB_CLEAN_DOCKER_IMAGE:-}
appmanager.cron-job.deploy-app-status-safety=${CRON_JOB_DEPLOY_APP_STATUS_SAFETY:0 */5 * * * *}
appmanager.cron-job.product-release-task-status-update=${CRON_JOB_PRODUCT_RELEASE_TASK_STATUS_UPDATE:0/20 * * * * *}
appmanager.cron-job.rt-app-instance-status-update=${CRON_JOB_RT_APP_INSTANCE_STATUS_UPDATE:0/10 * * * * *}
appmanager.cron-job.cron-job-manager-refresh-5s=${CRON_JOB_CRON_JOB_MANAGER_REFRESH_5S:0/5 * * * * *}
appmanager.cron-job.cron-job-manager-refresh-10s=${CRON_JOB_CRON_JOB_MANAGER_REFRESH_10S:0/10 * * * * *}
appmanager.cron-job.cron-job-manager-refresh-30s=${CRON_JOB_CRON_JOB_MANAGER_REFRESH_30S:0/30 * * * * *}
appmanager.cron-job.cron-job-manager-refresh-1m=${CRON_JOB_CRON_JOB_MANAGER_REFRESH_1M:0 0/1 * * * *}
appmanager.cron-job.cron-job-manager-refresh-2m=${CRON_JOB_CRON_JOB_MANAGER_REFRESH_2M:0 0/2 * * * *}
appmanager.cron-job.cron-job-manager-refresh-3m=${CRON_JOB_CRON_JOB_MANAGER_REFRESH_3M:0 0/3 * * * *}
appmanager.cron-job.cron-job-manager-refresh-4m=${CRON_JOB_CRON_JOB_MANAGER_REFRESH_4M:0 0/4 * * * *}
appmanager.cron-job.cron-job-manager-refresh-5m=${CRON_JOB_CRON_JOB_MANAGER_REFRESH_5M:0 0/5 * * * *}
appmanager.cron-job.cron-job-manager-refresh-1h=${CRON_JOB_CRON_JOB_MANAGER_REFRESH_1H:0 0 0/1 * * *}
appmanager.cron-job.informer-manager-refresh=${CRON_JOB_INFORMER_MANAGER_REFRESH:0 * * * * *}
appmanager.cron-job.workflow-remote-deploy-app-refresh=${CRON_JOB_WORKFLOW_REMOTE_DEPLOY_APP_REFRESH:0/20 * * * * *}
# CI
appmanager.image-builder.default-ci-account=${IMAGE_BUILDER_DEFAULT_CI_ACCOUNT:}
appmanager.image-builder.default-ci-token=${IMAGE_BUILDER_DEFAULT_CI_TOKEN:}
appmanager.image-builder.arm-remote-daemon=${ARM_DOCKER_HOST:}
# System Configuration
appmanager.system.env-id=${ABM_CLUSTER}
appmanager.system.enable-kaniko=${ENABLE_KANIKO:false}
appmanager.system.enable-worker=${ENABLE_WORKER:true}
appmanager.system.enable-product-task-executor=${ENABLE_PRODUCT_TASK_EXECUTOR:true}
# env
tesla.env=${APPMANAGER_ENV}
# Trait 相关 AK 配置
trait.flink.ak=${TRAIT_FLINK_AK}
trait.flink.sk=${TRAIT_FLINK_SK}
trait.tesla.ak=${TRAIT_TESLA_AK}
trait.tesla.sk=${TRAIT_TESLA_SK}
trait.private-zone.prod.ak=${TRAIT_PRIVATE_ZONE_PROD_AK}
trait.private-zone.prod.sk=${TRAIT_PRIVATE_ZONE_PROD_SK}
trait.private-zone.prod.finance.ak=${TRAIT_PRIVATE_ZONE_PROD_FINANCE_AK}
trait.private-zone.prod.finance.sk=${TRAIT_PRIVATE_ZONE_PROD_FINANCE_SK}
trait.private-zone.service.ak=${TRAIT_PRIVATE_ZONE_SERVICE_AK}
trait.private-zone.service.sk=${TRAIT_PRIVATE_ZONE_SERVICE_SK}